@inject ViewModels.UserViewModels.RegisterViewModel ViewModel
@inject IToastService ToastService

<div class="card">
    <div class="card-header d-flex justify-content-between">
        <h3>Registro</h3>
    </div>
    <div class="card-body">
        @if (ShowSuccessMessage)
        {
            <div class="alert alert-success fade @ShowClass" role="alert">
                <h4 class="alert-heading">¡Registro realizado con &eacute;xito!</h4>
                <p>Si los datos son correctos el administrador habilitar&aacute; su cuenta para que pueda ingresar al sistema y empezar a gestionar sus negocios. Un cordial saludo.</p>
                <hr />
                <div class="d-flex justify-content-end">
                    <a href="/ingresar" class="btn btn-icon btn-success"><i class="c-icon cil-home"></i><span>Regresar al Inicio</span></a>
                </div>
            </div>
        }
        else
        {
            if (ViewModel.User != null)
            {
                <Form @ref="Form" User="ViewModel.User" ValidSubmitCallback="SaveAsync" InvalidSubmitCallback="ShowError" ReturnToLogin="true" />
            }
        }
    </div>
</div>

<BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.BottomRight"
                Timeout="10"
                IconType="IconType.FontAwesome"
                ErrorIcon="cil-thumb-down"
                InfoIcon="cil-info"
                SuccessIcon="cil-thumb-up"
                WarningIcon="cil-warning" />

@code {
    private Form Form;
    private bool ShowSuccessMessage = false;
    private string ShowClass = "";

    protected override void OnInitialized()
    {
        ViewModel.User = new UserResource();
    }

    private async Task SaveAsync()
    {
        if (await ViewModel.SaveAsync(ViewModel.User))
        {
            ToastService.ShowSuccess(ViewModel.User.Email, "Información guardada con éxito");
            ShowSuccessMessage = true;
            await Task.Delay(1000);
            ShowClass = "show";
        }
        else
        {
            ToastService.ShowError(ViewModel.User.Email, ViewModel.ErrorMessage);
            await Form.ShowAlertAsync(ViewModel.ErrorMessage);
        }
    }

    public void ShowError()
    {
        ToastService.ShowError("Se encontraron errores en el formulario", "Error");
    }
}